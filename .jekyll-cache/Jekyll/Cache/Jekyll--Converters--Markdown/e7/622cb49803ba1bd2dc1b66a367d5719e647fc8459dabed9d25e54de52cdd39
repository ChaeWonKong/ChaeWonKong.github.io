I"UJ<p>React에서 지도를 사용하는 것은 조금 불편하다.</p>

<p>카카오맵이나 네이버 지도 API는 iOS/Android/JavaScript 이렇게 세 분류로 나눠 제공되는데, <strong>Web을 의미하는 JavaScript의 경우 DOM을 직접 접근하여 지도를 그리는 방식을 채택하고 있어서다.</strong></p>

<p>예를들어,</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
	<span class="nt">&lt;title&gt;</span>Kakao 지도 시작하기<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
	<span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"map"</span> <span class="na">style=</span><span class="s">"width:500px;height:400px;"</span><span class="nt">&gt;&lt;/div&gt;</span>
	<span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"//dapi.kakao.com/v2/maps/sdk.js?appkey=발급받은 APP KEY를 넣으시면 됩니다."</span><span class="nt">&gt;&lt;/script&gt;</span>
	<span class="nt">&lt;script&gt;</span>
		<span class="kd">var</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">map</span><span class="dl">'</span><span class="p">);</span>
		<span class="kd">var</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
			<span class="na">center</span><span class="p">:</span> <span class="k">new</span> <span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">33.450701</span><span class="p">,</span> <span class="mf">126.570667</span><span class="p">),</span>
			<span class="na">level</span><span class="p">:</span> <span class="mi">3</span>
		<span class="p">};</span>

		<span class="kd">var</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nb">Map</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>
	<span class="nt">&lt;/script&gt;</span>
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>이렇게 div 엘리먼트를 가져와 지도를 렌더링하는 방식으로 동작한다.</p>

<p>따라서, React에서 카카오맵스 API를 이용하려면 라이프사이클을 응용하는 등 약간의 커스터마이징 작업이 필요하다.</p>

<p>오늘은 TypeScript 기반으로 CRA(Create React App)을 통해 생성된 React 어플리케이션에서 카카오맵스 API를 사용하는 방법을 알아본다.</p>

<h2 id="준비">준비</h2>

<p>먼저 <a href="https://developers.kakao.com/">KakaoDevelopers_</a>에서 회원가입을 하고 어플리케이션 등록을 하자.</p>

<p>지도 API를 사용하기 위해서는 당연히 <strong>카카오로부터 앱 등록을 하고 키 값을 발급받아야</strong> 한다.</p>

<p><img src="https://github.com/ChaeWonKong/image-resource/blob/master/kakao-maps/1.png?raw=true" width="100%" /></p>

<p>사이트에 들어간 후, 로그인을 하고 위 사진에서처럼 “내 애플리케이션”을 눌러 관리 화면으로 이동한다.</p>

<p><img src="https://github.com/ChaeWonKong/image-resource/blob/master/kakao-maps/2.png?raw=true" width="100%" /></p>

<p>다음으로 “앱 만들기”를 클릭해 앱 만들기 화면으로 이동한다.</p>

<p><img src="https://github.com/ChaeWonKong/image-resource/blob/master/kakao-maps/3.png?raw=true" width="100%" /></p>

<p>앱 이름과 회사명 등을 추가하고 “앱 만들기”를 클릭한다.</p>

<p><img src="https://github.com/ChaeWonKong/image-resource/blob/master/kakao-maps/4.png?raw=true" width="100%" /></p>

<p>앱을 생성하였다면, 좌측 메뉴 탭에서 “설정” -&gt; “일반” 으로 이동한 후 중간 부분의 “플랫폼 추가”를 클릭하여 “웹”을 추가해준다.</p>

<p><img src="https://github.com/ChaeWonKong/image-resource/blob/master/kakao-maps/5.png?raw=true" width="100%" /></p>

<p>웹을 추가한 후 웹을 선택하고 위 사진처럼 사이트 도메인을 추가해준다.</p>

<p>여기서 <strong>사이트 도메인을 제대로 추가해주지 않으면 CORS 에러가 발생할 수 있으니, 개발환경과 배포환경의 도메인을 모두 추가해 준다.</strong></p>

<p>우리는 CRA로 앱을 생성할 것이므로 우선 “http://localhost:3000”을 추가해 준다.</p>

<h2 id="프로젝트-생성">프로젝트 생성</h2>

<p>다음으로 프로젝트를 생성한다.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn create react-app map-app <span class="nt">--template</span> typescript
</code></pre></div></div>

<p>본인이 원하는 형태로 앱을 생성해준다.</p>

<p>본 포스팅에서는 타입스크립트를 사용하도록 설정해 생성한다.</p>

<h2 id="카카오맵스-연동">카카오맵스 연동</h2>

<p>먼저 index.html에 카카오맵스 소스를 링크해야 한다.</p>

<p><code class="language-plaintext highlighter-rouge">public/index.html</code> 에 다음을 추가한다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;body&gt;</span>
  <span class="nt">&lt;noscript&gt;</span>You need to enable JavaScript to run this app.<span class="nt">&lt;/noscript&gt;</span>
  <span class="nt">&lt;div</span> <span class="na">id=</span><span class="s">"root"</span><span class="nt">&gt;&lt;/div&gt;</span>
  <span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"//dapi.kakao.com/v2/maps/sdk.js?appkey=[발급받은 javascript 키]"</span><span class="nt">&gt;&lt;/script&gt;</span>

<span class="nt">&lt;/body&gt;</span>
</code></pre></div></div>

<p>Body 태그의 가장 밑에 위처럼</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"//dapi.kakao.com/v2/maps/sdk.js?appkey=[발급받은 javascript 키]"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>이 스크립트 태그를 추가한다.</p>

<p>여기서 주의할 점이 있다.</p>

<p><strong>발급받은 키는 다른 사람에게 공개될 경우, 타인이 악의적으로 우리의 쿼터로 카카오 지도를 사용할 가능성이 있으므로 숨기는 것이 좋다.</strong></p>

<p>우리는 CRA가 제공하는 <strong>“Custom Environment Variable”을 이용해 추가</strong>해 줄 것이다.</p>

<p>먼저 root에 <code class="language-plaintext highlighter-rouge">.env</code> 라는 파일을 생성한다.</p>

<p>그리고 그 파일에 다음처럼 추가한다.</p>

<pre><code class="language-env">REACT_APP_KAKAO_MAP_KEY=[JavaScript 키]
</code></pre>

<p>그리고 <code class="language-plaintext highlighter-rouge">.gitignore</code> 에 “.env”를 추가해 커밋 시 ignore될 수 있도록 한다.</p>

<p>다음으로 좀 전에 <code class="language-plaintext highlighter-rouge">public/index.html</code>  에 추가했던 스크립트 태그의 내용을 아래처럼 수정한다.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">type=</span><span class="s">"text/javascript"</span> <span class="na">src=</span><span class="s">"//dapi.kakao.com/v2/maps/sdk.js?appkey=%REACT_APP_KAKAO_MAP_KEY%"</span><span class="nt">&gt;&lt;/script&gt;</span>
</code></pre></div></div>

<p>위 코드는 이전 코드에 비해</p>

<p><code class="language-plaintext highlighter-rouge">appkey=%REACT_APP_KAKAO_MAP_KEY%</code></p>

<p>이 부분이 변경되었다.</p>

<p><strong>혹시나 실수로 key가 유출되었거나 커밋 후 깃허브에 푸시된 경우 KakaoDevelopers의 본인 계정에서 키를 새로 발급 받을 수 있다.</strong></p>

<h2 id="지도-생성">지도 생성</h2>

<p>다음으로 <code class="language-plaintext highlighter-rouge">App.tsx</code> 에서 지도를 생성해 보자.</p>

<p>우리는 TypeScript 기반의 Functional Component로 지도를 생성할 것이다.</p>

<p>여기서는 가장 기본적인 예제인 지도 생성만 다룰 예정이니,</p>

<p><a href="http://apis.map.kakao.com/web/guide/">Kakao Maps API Guide</a> 를 참고하자.</p>

<p><code class="language-plaintext highlighter-rouge">src/App.tsx</code></p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">useEffect</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>



<span class="kd">const</span> <span class="nx">App</span><span class="p">:</span> <span class="nx">React</span><span class="p">.</span><span class="nx">FC</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"App"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="p">=</span><span class="s">"map"</span> <span class="na">style</span><span class="p">=</span><span class="si">{</span><span class="p">{</span> <span class="na">width</span><span class="p">:</span> <span class="dl">"</span><span class="s2">100vw</span><span class="dl">"</span><span class="p">,</span> <span class="na">height</span><span class="p">:</span> <span class="dl">"</span><span class="s2">100vh</span><span class="dl">"</span> <span class="p">}</span><span class="si">}</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">App</span><span class="p">;</span>
</code></pre></div></div>

<p>먼저 위처럼 div 태그에 ‘map’이라는 id를 부여해준다.</p>

<p><strong>여기서 중요한 것은 반드시 width와 height가 명시적으로 제공되어야 지도가 렌더링 된다는 점이다.</strong></p>

<p>width나 height 중 어느 하나라도 누락되거나 “%”등의 상대 값으로 제공되면 지도는 렌더링되지 않는다.</p>

<p>다음으로, <code class="language-plaintext highlighter-rouge">id="map"</code> 을 동적으로 가져와 지도를 생성하는 코드를 추가하자.</p>

<p>여기서 라이프사이클을 이용해야 한다.</p>

<p>만약 클래스형 컴포넌트를 사용 중이라면 <code class="language-plaintext highlighter-rouge">componentDidMount</code> 를 이용하면 되고, 우리는 <code class="language-plaintext highlighter-rouge">useEffect</code> 를 이용할 것이다.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">let</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">map</span><span class="dl">'</span><span class="p">);</span>
    <span class="kd">let</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span>
      <span class="na">center</span><span class="p">:</span> <span class="k">new</span> <span class="nb">window</span><span class="p">.</span><span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">33.450701</span><span class="p">,</span> <span class="mf">126.570667</span><span class="p">),</span>
      <span class="na">level</span><span class="p">:</span> <span class="mi">3</span>
    <span class="p">};</span>

    <span class="kd">let</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">window</span><span class="p">.</span><span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nb">Map</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span>

  <span class="p">},</span> <span class="p">[])</span>
</code></pre></div></div>

<p>여기까지 잘 따라 왔다면 에러가 뜰 것이다. <code class="language-plaintext highlighter-rouge">kakao</code> 가 존재하지 않는다고 말이다.</p>

<p>정상이다.</p>

<p><code class="language-plaintext highlighter-rouge">public/index.html</code>에 링크된 스크립트 덕분에 kakao는 존재한다. 다만 우리 앱은 그 사실을 알지 못한다.
따라서 귀찮더라도 kakao가 존재한다는 것을 앱에 알려줘야 한다.</p>

<p>먼저 <code class="language-plaintext highlighter-rouge">kakao</code> 를 글로벌로 선언해 줘야 한다.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kr">declare</span> <span class="nb">global</span> <span class="p">{</span>
  <span class="kr">interface</span> <span class="nx">Window</span> <span class="p">{</span>
    <span class="nl">kakao</span><span class="p">:</span> <span class="kr">any</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>이제 앱을 실행해 보자.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nv">$ </span>yarn start
</code></pre></div></div>

<p>아마 지도를 확인할 수 있을 것이다.</p>

<p><code class="language-plaintext highlighter-rouge">src/App.tsx</code> 의 전체 코드는 아래와 같다.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">useEffect</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>

<span class="kr">declare</span> <span class="nb">global</span> <span class="p">{</span>
  <span class="kr">interface</span> <span class="nx">Window</span> <span class="p">{</span>
    <span class="nl">kakao</span><span class="p">:</span> <span class="kr">any</span><span class="p">;</span>
  <span class="p">}</span>
<span class="p">}</span>

<span class="kd">const</span> <span class="nx">App</span><span class="p">:</span> <span class="nx">React</span><span class="p">.</span><span class="nx">FC</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>

    <span class="kd">let</span> <span class="nx">container</span> <span class="o">=</span> <span class="nb">document</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="dl">'</span><span class="s1">map</span><span class="dl">'</span><span class="p">);</span> <span class="c1">//지도를 담을 영역의 DOM 레퍼런스</span>
    <span class="kd">let</span> <span class="nx">options</span> <span class="o">=</span> <span class="p">{</span> <span class="c1">//지도를 생성할 때 필요한 기본 옵션</span>
      <span class="na">center</span><span class="p">:</span> <span class="k">new</span> <span class="nb">window</span><span class="p">.</span><span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nx">LatLng</span><span class="p">(</span><span class="mf">33.450701</span><span class="p">,</span> <span class="mf">126.570667</span><span class="p">),</span> <span class="c1">//지도의 중심좌표.</span>
      <span class="na">level</span><span class="p">:</span> <span class="mi">3</span> <span class="c1">//지도의 레벨(확대, 축소 정도)</span>
    <span class="p">};</span>

    <span class="kd">let</span> <span class="nx">map</span> <span class="o">=</span> <span class="k">new</span> <span class="nb">window</span><span class="p">.</span><span class="nx">kakao</span><span class="p">.</span><span class="nx">maps</span><span class="p">.</span><span class="nb">Map</span><span class="p">(</span><span class="nx">container</span><span class="p">,</span> <span class="nx">options</span><span class="p">);</span> <span class="c1">//지도 생성 및 객체 리턴</span>

  <span class="p">},</span> <span class="p">[])</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nt">div</span> <span class="na">className</span><span class="p">=</span><span class="s">"App"</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nt">div</span> <span class="na">id</span><span class="p">=</span><span class="s">"map"</span> <span class="na">style</span><span class="p">=</span><span class="si">{</span><span class="p">{</span> <span class="na">width</span><span class="p">:</span> <span class="dl">"</span><span class="s2">100vw</span><span class="dl">"</span><span class="p">,</span> <span class="na">height</span><span class="p">:</span> <span class="dl">"</span><span class="s2">100vh</span><span class="dl">"</span> <span class="p">}</span><span class="si">}</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nt">div</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">}</span>

<span class="k">export</span> <span class="k">default</span> <span class="nx">App</span><span class="p">;</span>
</code></pre></div></div>

:ET