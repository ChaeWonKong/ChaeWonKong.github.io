I"&<p>요즘은 대부분의 웹 서비스가 모바일 기기 비중이 더 높을 것이라고 생각합니다.
“반응형 웹”은 필수처럼 되었고, “모바일 퍼스트 디자인”이라는 말이 공공연하게 받아들여질 정도죠.</p>

<p>이제 웹 개발자는 IE, 크롬, 사파리에서 확인하는 것만으론 부족합니다. 모바일, 태블릿 등 기기별로 서로 상이한 사이즈, 더욱 다양해진 브라우저를 고려해 개발해야 합니다.</p>

<p>점점 흔해지는 웹뷰에서의 디버깅 역시 고통스러운 경우가 많죠.</p>

<p>텐센트에서 개발한 오픈소스인 vConsole을 이용하면 웹 프론트엔드에서의 디버깅이 보다 편리해 집니다.
<strong>웹뷰나 모바일웹에서 버튼만 클릭하면 콘솔탭이 올라오고, 로그, 네트워크, 스토리지 등을 확인할 수 있게 됩니다.</strong></p>

<h2 id="tldr">TL;DR</h2>
<p>vConsole 쓰세요.</p>

<p>vConsole은 <strong>모바일 기기 내 웹을 위한 크롬 개발자 도구</strong>와 유사합니다. <br />
<strong>console log, 네트워크, 쿠키, 세션/로컬 스토리지</strong>를 모두 모바일웹에서 확인할 수 있습니다.</p>

<h2 id="제공되는-기능">제공되는 기능</h2>
<p>Demo를 경험하고 싶다면 <a href="https://github.com/Tencent/vConsole">https://github.com/Tencent/vConsole</a>를 확인해 주세요.</p>

<table>
  <thead>
    <tr>
      <th>버튼</th>
      <th>콘솔창</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/vconsole1.PNG?raw=true" alt="vconsole-button-view" /></td>
      <td><img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/vconsole2.PNG?raw=true" alt="vconsole-console-view" /></td>
    </tr>
  </tbody>
</table>

<p>왼쪽 사진에 <code class="language-plaintext highlighter-rouge">vConsole</code>이라는 초록색 버튼 보이시나요?</p>

<p>저 버튼을 클릭하면 오른쪽처럼 아래에서 콘솔창이 드르륵 올라옵니다. <br />
참고로 <strong>vConsole 버튼은 손가락으로 탭해 원하는 위치로 이동시킬 수 있습니다.</strong>  <br />
배경의 컨텐츠가 가려져 불편하다면 드래그해 원하는 위치로 버튼을 이동시킬 수 있는 것이죠.</p>

<h2 id="사용방법">사용방법</h2>
<p>너무나 간단합니다. <br />
5분이면 가능해요.</p>

<h3 id="설치">설치</h3>
<div class="language-console highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="gp">$</span><span class="w"> </span>npm <span class="nb">install </span>vconsole
</code></pre></div></div>

<h3 id="일반적인-사용법">일반적인 사용법</h3>
<p>만약 순수 JavaScript에서 사용한다면 아래처럼 사용하면 된다고 하네요.</p>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;script </span><span class="na">src=</span><span class="s">"path/to/vconsole.min.js"</span><span class="nt">&gt;&lt;/script&gt;</span>
<span class="nt">&lt;script&gt;</span>
  <span class="c1">// init vConsole</span>
  <span class="kd">var</span> <span class="nx">vConsole</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">VConsole</span><span class="p">();</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">'</span><span class="s1">Hello world</span><span class="dl">'</span><span class="p">);</span>
<span class="nt">&lt;/script&gt;</span>
</code></pre></div></div>

<blockquote>
  <p>참고링크: <a href="https://github.com/Tencent/vConsole#usage">vConsole - Usage</a></p>
</blockquote>

<p>저는 React를 사용하고 있기 때문에, React에서의 사용법을 알아보겠습니다.</p>

<h3 id="react에서의-사용법">React에서의 사용법</h3>
<p>우선 사용할 때는 이렇게 import하면 됩니다.
TypeScript를 쓰시는 분만 <code class="language-plaintext highlighter-rouge">VConsoleConfig</code>를 import해 주세요.</p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">vConsole</span><span class="p">,</span> <span class="p">{</span> <span class="nx">VConsoleConfig</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">vconsole</span><span class="dl">'</span><span class="p">;</span>
</code></pre></div></div>

<p><br />
여기서 default로 import되는 vConsole의 경우 생성자함수입니다. <code class="language-plaintext highlighter-rouge">new vConsole()</code> 형태로 사용할 수 있다는 말이지요.
다음으로, API를 조금 확인해 보겠습니다.
<br /></p>

<div class="language-typescript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">export</span> <span class="kr">interface</span> <span class="nx">VConsoleConfig</span> <span class="p">{</span>
  <span class="nl">defaultPlugins</span><span class="p">?:</span> <span class="kr">string</span><span class="p">[]</span>
  <span class="nx">onReady</span><span class="p">?:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="k">void</span>
  <span class="nx">onClearLog</span><span class="p">?:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="k">void</span>
  <span class="nx">maxLogNumber</span><span class="p">?:</span> <span class="kr">number</span>
  <span class="nx">disableLogScrolling</span><span class="p">?:</span> <span class="nx">boolean</span>
<span class="p">}</span>
</code></pre></div></div>
<p><br /></p>

<table>
  <thead>
    <tr>
      <th>Key</th>
      <th>Type</th>
      <th>Optional</th>
      <th>Default value</th>
      <th>Description</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>defaultPlugins</td>
      <td>Array</td>
      <td>true</td>
      <td>[‘system’, ‘network’, ‘element’, ‘storage’]</td>
      <td>Listed built-in plugins will be inited and loaded into vConsole.</td>
    </tr>
    <tr>
      <td>onReady</td>
      <td>Function</td>
      <td>true</td>
      <td> </td>
      <td>Trigger after vConsole is inited and default plugins is loaded.</td>
    </tr>
    <tr>
      <td>onClearLog</td>
      <td>Function</td>
      <td>true</td>
      <td> </td>
      <td>Trigger after click “Clear” button in Log and System panel.</td>
    </tr>
    <tr>
      <td>maxLogNumber</td>
      <td>Number</td>
      <td>true</td>
      <td>1000</td>
      <td>Overflow logs will be removed from log tabs.</td>
    </tr>
    <tr>
      <td>disableLogScrolling</td>
      <td>Boolean</td>
      <td>true</td>
      <td> </td>
      <td>If <code class="language-plaintext highlighter-rouge">false</code>, panel will not scroll to bottom while printing new logs.</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>참고링크: <a href="https://github.com/Tencent/vConsole/blob/dev/doc/public_properties_methods.md">vConsole - Public Properties &amp; Methods
</a></p>
</blockquote>
:ET