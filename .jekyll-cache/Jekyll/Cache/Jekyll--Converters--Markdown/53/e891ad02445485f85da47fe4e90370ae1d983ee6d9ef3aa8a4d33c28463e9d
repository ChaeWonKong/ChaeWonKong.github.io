I"Ó!<p>SVGs are very handy â€“ you can manipulate icons, images, figures, and graphs by programmatically.</p>

<p>Today, I learned how to create a color palette with several color chips by using SVG and React.</p>

<h2 id="basics">Basics</h2>
<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;svg</span> <span class="na">height=</span><span class="s">"16"</span> <span class="na">width=</span><span class="s">"16"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;circle</span> <span class="na">cx=</span><span class="s">"8"</span> <span class="na">cy=</span><span class="s">"8"</span> <span class="na">r=</span><span class="s">"6"</span> <span class="na">stroke=</span><span class="s">"black"</span> <span class="na">stroke-width=</span><span class="s">"2"</span> <span class="na">fill=</span><span class="s">"black"</span> <span class="nt">/&gt;</span>
<span class="nt">&lt;/svg&gt;</span>
</code></pre></div></div>

<ol>
  <li><code class="language-plaintext highlighter-rouge">height</code> and <code class="language-plaintext highlighter-rouge">width</code> represents size of the canvas; the area that is covered by generated svg.</li>
  <li><code class="language-plaintext highlighter-rouge">cx</code> and <code class="language-plaintext highlighter-rouge">cy</code> refers center of the circle. By default <code class="language-plaintext highlighter-rouge">cx</code> and <code class="language-plaintext highlighter-rouge">cy</code> is set to 0.</li>
  <li><code class="language-plaintext highlighter-rouge">r</code> is an abbreviation of radius.</li>
  <li><code class="language-plaintext highlighter-rouge">stroke</code> and <code class="language-plaintext highlighter-rouge">stroke-width</code> decides outer border of the circle.</li>
  <li><code class="language-plaintext highlighter-rouge">fill</code> handles inner background color of the circle.</li>
</ol>

<p>In the example above, I deliberatly set each numbers.</p>

<p>First, I set the size to 16 * 16, so, the center point would be (8, 8).
Thatâ€™s why <code class="language-plaintext highlighter-rouge">cx</code> and <code class="language-plaintext highlighter-rouge">cy</code> equals to 8.</p>

<p>Then, I set <code class="language-plaintext highlighter-rouge">stroke-width</code> to 2, which means, the actual radius of the circle should equal to <code class="language-plaintext highlighter-rouge">r + 2</code>(Since, border should be counted).</p>

<p>So, the <code class="language-plaintext highlighter-rouge">r</code> should be 6, in order to present the whole circle in the 16*16 canvas without any cut-offs.</p>

<p>To sum up,</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cx = cy = width / 2
r = (width/2) - strokeWidth
</code></pre></div></div>

<h2 id="implement-in-react">Implement in React</h2>

<p>Use SVGs in React is easy.</p>
<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">styled</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">styled-components</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">TEXT_COLORS</span> <span class="o">=</span> <span class="p">[</span>
  <span class="dl">'</span><span class="s1">#000000</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#FFFFFF</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#F4511E</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#FBC02D</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#00C853</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#0091EA</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#00B8D4</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#00695C</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#AA00FF</span><span class="dl">'</span><span class="p">,</span>
  <span class="dl">'</span><span class="s1">#7B1FA2</span><span class="dl">'</span><span class="p">,</span>
<span class="p">];</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">Wrapper</span> <span class="o">=</span> <span class="nx">styled</span><span class="p">.</span><span class="nx">div</span><span class="s2">`
  display: flex;
  justify-content: center;
  grid-gap: 10px;
  align-items: center;
  width: 100%;
  margin-left: -16px;
  height: 56px;
  position: absolute;
  bottom: 70px;
  padding: 0 20px;
`</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">ColorSelector</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">renderColorchips</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">TEXT_COLORS</span><span class="p">.</span><span class="nx">map</span><span class="p">((</span><span class="na">color</span><span class="p">:</span> <span class="kr">string</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="p">(</span>
      <span class="p">&lt;</span><span class="nt">svg</span>
        <span class="na">key</span><span class="p">=</span><span class="si">{</span> <span class="nx">color</span> <span class="si">}</span>
        <span class="na">width</span><span class="p">=</span><span class="si">{</span> <span class="mi">24</span> <span class="si">}</span>
        <span class="na">height</span><span class="p">=</span><span class="si">{</span> <span class="mi">24</span> <span class="si">}</span>
      <span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nt">circle</span>
          <span class="na">cx</span><span class="p">=</span><span class="si">{</span> <span class="mi">12</span> <span class="si">}</span>
          <span class="na">cy</span><span class="p">=</span><span class="si">{</span> <span class="mi">12</span> <span class="si">}</span>
          <span class="na">r</span><span class="p">=</span><span class="si">{</span> <span class="mi">10</span> <span class="si">}</span>
          <span class="na">fill</span><span class="p">=</span><span class="si">{</span> <span class="nx">color</span> <span class="si">}</span>
          <span class="na">stroke</span><span class="p">=</span><span class="s">'white'</span>
          <span class="na">strokeWidth</span><span class="p">=</span><span class="si">{</span> <span class="mi">2</span> <span class="si">}</span>
        <span class="p">/&gt;</span>
      <span class="p">&lt;/</span><span class="nt">svg</span><span class="p">&gt;</span>
    <span class="p">);</span>
  <span class="p">));</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nc">Wrapper</span><span class="p">&gt;</span>
      <span class="si">{</span> <span class="nx">renderColorchips</span><span class="p">()</span> <span class="si">}</span>
    <span class="p">&lt;/</span><span class="nc">Wrapper</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p>Since, itâ€™s React JSX/TSX not HTML, be sure to make all properties camelCased.
<code class="language-plaintext highlighter-rouge">stroke-width</code> should be <code class="language-plaintext highlighter-rouge">strokeWidth</code>.</p>

<p><code class="language-plaintext highlighter-rouge">width</code>, <code class="language-plaintext highlighter-rouge">height</code>, <code class="language-plaintext highlighter-rouge">cx</code>, <code class="language-plaintext highlighter-rouge">r</code>, <code class="language-plaintext highlighter-rouge">strokeWidth</code> could be either string or number type.</p>

<p>The result would be like:
<img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/palette.png" alt="color palette" /></p>

<p>The thing is, I added more features, like <code class="language-plaintext highlighter-rouge">onClick</code>.</p>

:ET