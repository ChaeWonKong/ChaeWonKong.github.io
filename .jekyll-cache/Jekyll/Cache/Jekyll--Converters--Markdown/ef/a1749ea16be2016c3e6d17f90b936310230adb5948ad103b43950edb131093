I"Xq<p>Firebase offers simple, easy way to implement Authentication including e-mail sign-in and OAuth like Google, Facebook, Apple, GitHub, and so on.</p>

<p>In this post, I will focus on Google OAuth.</p>

<h2 id="flow">Flow</h2>
<p>First you need to understand the OAuth flow.</p>

<ol>
  <li>When a user clicks authenticate button, by redirect or popup, the user sigins in with Google and Google responds with user data and accessToken.</li>
  <li>Then, the accessToken provided by Google is sent to your server, and your server stores the user data.</li>
  <li>After that, your server responds with accessToken(generated by your server).</li>
  <li>Finally, the accessToken generated from your server stores in either sessionStorage or localStorage to keep the session.</li>
</ol>

<p>Since this article is about Google OAuth implementation, further concepts related to authentication will not be part of it.</p>

<h2 id="requirements">Requirements</h2>
<p>You need to install firebase library.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ npm i firebase
</code></pre></div></div>

<p>Then, you need to have api-key and auth-domain.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">firebase</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">firebase</span><span class="dl">'</span><span class="p">;</span>

<span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">apiKey</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REACT_APP_FIREBASE_API_KEY</span><span class="p">,</span>
  <span class="na">authDomain</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REACT_APP_FIREBASE_AUTH_DOAMIN</span><span class="p">,</span>
<span class="p">};</span>
<span class="nx">firebase</span><span class="p">.</span><span class="nx">initializeApp</span><span class="p">(</span><span class="nx">config</span><span class="p">);</span>
</code></pre></div></div>

<p>You can find your api-key and auth-domain in your Firebase console like below.</p>

<p><img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/firebase-auth.png" width=" 1000px" /></p>

<p><code class="language-plaintext highlighter-rouge">var firebaseConfig</code> object contains <code class="language-plaintext highlighter-rouge">apiKey</code> and <code class="language-plaintext highlighter-rouge">authDomain</code>.</p>

<p>You can add these to your <code class="language-plaintext highlighter-rouge">.env</code> file.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>REACT_APP_FIREBASE_API_KEY=YOUR_FIREBASE_API_KEY
REACT_APP_FIREBASE_AUTH_DOAMIN=YOUR_FIREBASE_AUTH_DOMAIN
</code></pre></div></div>

<h2 id="implementation">Implementation</h2>
<p>You can choose either official Google library(<code class="language-plaintext highlighter-rouge">react-firebaseui</code>) or make your own auth component.</p>

<p><a href="https://github.com/firebase/firebaseui-web-react">Here</a> you can find docs and examples about react-firebaseui.</p>

<p>In this post, I will create custom UI and Logic.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">S</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./styled</span><span class="dl">'</span><span class="p">;</span>

<span class="k">export</span> <span class="kd">const</span> <span class="nx">GoogleAuth</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="c1">// ...</span>

  <span class="k">return</span> <span class="p">(</span>
  <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">Container</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">IconWrapper</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">Icon</span> <span class="na">name</span><span class="p">=</span><span class="s">'TEMP_LOGO'</span> <span class="na">size</span><span class="p">=</span><span class="s">'96'</span> <span class="p">/&gt;</span>
    <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">IconWrapper</span><span class="p">&gt;</span>
    <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonWrapper</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">Button</span> <span class="na">onClick</span><span class="p">=</span><span class="si">{</span><span class="nx">signInWithGoogle</span><span class="si">}</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonText</span><span class="p">&gt;</span>Start With Google Account<span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonText</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">Button</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonWrapper</span><span class="p">&gt;</span>
  <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">Container</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<p>I used <code class="language-plaintext highlighter-rouge">styled-components</code> in <code class="language-plaintext highlighter-rouge">./styled.ts</code> to add styles to the component.</p>

<p>Next, let’s create <code class="language-plaintext highlighter-rouge">signInWithGoogle</code> onClick handler.</p>

<p>you can choose either ‘popup’ or ‘redirect’ in this case.</p>

<ol>
  <li>‘popup’ opens new window to handle Google OAuth. The method(<code class="language-plaintext highlighter-rouge">signInWithPopup</code>) returns promise that would resolves with auth response.</li>
  <li>‘redirect’ changes current page to google auth page(method: <code class="language-plaintext highlighter-rouge">signInWithRedirect</code>). After sign in or sign up, the user is going to redirected to the recent page. You have to call another method(<code class="language-plaintext highlighter-rouge">getRedirectResult</code>) to get auth response.</li>
</ol>

<h3 id="sign-in-with-popup">Sign in with popup</h3>
<p>Sign in with popup is simple.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">useHistory</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-rouder-dom</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// ...</span>
<span class="kd">const</span> <span class="nx">history</span> <span class="o">=</span> <span class="nx">useHistory</span><span class="p">()</span>
<span class="kd">const</span> <span class="nx">signInWithGoogle</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">provider</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">GoogleAuthProvider</span><span class="p">();</span>
  <span class="kd">const</span> <span class="p">{</span> <span class="nx">credential</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">().</span><span class="nx">signInWithPopup</span><span class="p">(</span><span class="nx">provider</span><span class="p">);</span>

  <span class="k">if</span> <span class="p">(</span><span class="nx">credential</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">try</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">requestParams</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">provider</span><span class="p">:</span> <span class="dl">'</span><span class="s1">google</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">accessToken</span><span class="p">:</span> <span class="nx">credential</span><span class="p">.</span><span class="nx">accessToken</span><span class="p">,</span>
      <span class="p">};</span>
      <span class="kd">const</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span>
        <span class="p">.</span><span class="nx">post</span><span class="o">&lt;</span><span class="p">{</span><span class="na">accessToken</span><span class="p">:</span> <span class="kr">string</span><span class="p">}</span><span class="o">&gt;</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">apiBaseURL</span><span class="p">}</span><span class="s2">/token`</span><span class="p">,</span> <span class="nx">requestParams</span><span class="p">);</span>
      
      <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">accessToken</span><span class="dl">'</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">accessToken</span><span class="p">);</span>
      <span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">'</span><span class="s1">/url-to-redirect</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
      <span class="c1">// Error hanlding logic</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>The line below is the logic that requests API server(your server)’s accessToken with Google’s accessToken.</p>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span>
  <span class="p">.</span><span class="nx">post</span><span class="o">&lt;</span><span class="p">{</span><span class="na">accessToken</span><span class="p">:</span> <span class="kr">string</span><span class="p">}</span><span class="o">&gt;</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">apiBaseURL</span><span class="p">}</span><span class="s2">/token`</span><span class="p">,</span> <span class="nx">requestParams</span><span class="p">);</span>
</code></pre></div></div>

<h3 id="sign-in-with-redirect">Sign in with redirect</h3>
<p>Sign in with redirect is a little bit complicated, since you need to implement onClick redirect handler and redirect result hanlder separately.</p>

<p><strong>Button Click Handler</strong></p>
<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">const</span> <span class="nx">signInWithGoogle</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">provider</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">GoogleAuthProvider</span><span class="p">();</span>
  <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">().</span><span class="nx">signInWithRedirect</span><span class="p">(</span><span class="nx">provider</span><span class="p">);</span>
<span class="p">};</span>
</code></pre></div></div>

<p><strong>Result Handler</strong></p>
<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="k">import</span> <span class="p">{</span> <span class="nx">useHistory</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-rouder-dom</span><span class="dl">'</span><span class="p">;</span>

  <span class="c1">// ...</span>
  <span class="kd">const</span> <span class="nx">history</span> <span class="o">=</span> <span class="nx">useHistory</span><span class="p">();</span>
  <span class="kd">const</span> <span class="nx">accessToken</span> <span class="o">=</span> <span class="nx">sessionstorage</span><span class="p">.</span><span class="nx">getItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">accessToken</span><span class="dl">'</span><span class="p">);</span>

  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">getGoogleOAuthResponse</span><span class="p">();</span>
  <span class="p">},</span> <span class="p">[]);</span>

  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">token</span><span class="p">)</span> <span class="p">{</span>
      <span class="c1">// Pretend the token is valid; </span>
      <span class="c1">// You need to implement proper token verification logic here.</span>
      <span class="c1">// If token is valid, redirect user to desired route.</span>
      <span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">'</span><span class="s1">/url-to-redirect</span><span class="dl">'</span><span class="p">)</span>
    <span class="p">}</span>
  <span class="p">},</span> <span class="p">[</span><span class="nx">token</span><span class="p">]);</span>

  <span class="kd">const</span> <span class="nx">getGoogleOAuthResponse</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="c1">// "as any" Resolves "Property 'accessToken' does not exist on type 'AuthCredential'" error</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">credential</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">().</span><span class="nx">getRedirectResult</span><span class="p">()</span> <span class="k">as</span> <span class="kr">any</span><span class="p">;</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">credential</span><span class="p">)</span> <span class="p">{</span>
      <span class="k">try</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="nx">requestParams</span> <span class="o">=</span> <span class="p">{</span>
          <span class="na">provider</span><span class="p">:</span> <span class="dl">'</span><span class="s1">google</span><span class="dl">'</span><span class="p">,</span>
          <span class="na">accessToken</span><span class="p">:</span> <span class="nx">credential</span><span class="p">.</span><span class="nx">accessToken</span><span class="p">,</span>
        <span class="p">};</span>
        <span class="kd">const</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span>
          <span class="p">.</span><span class="nx">post</span><span class="o">&lt;</span><span class="p">{</span><span class="na">token</span><span class="p">:</span> <span class="kr">string</span><span class="p">}</span><span class="o">&gt;</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">apiBaseURL</span><span class="p">}</span><span class="s2">/token`</span><span class="p">,</span> <span class="nx">requestParam</span><span class="p">);</span>

        <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">accessToken</span><span class="dl">'</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">token</span><span class="p">);</span>
        <span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">'</span><span class="s1">/rooms</span><span class="dl">'</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="c1">// Error hanlding logic</span>
      <span class="p">}</span> 
    <span class="p">}</span>
  <span class="p">};</span>
</code></pre></div></div>

<h3 id="example-code">Example Code</h3>

<div class="language-tsx highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span> <span class="nx">apiBaseURL</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">api/constants</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">axios</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">axios</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">useOAuth</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">api/useOAuth</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">Icon</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">components</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">firebase</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">firebase</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="nx">React</span><span class="p">,</span> <span class="p">{</span> <span class="nx">useEffect</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span> <span class="nx">useHistory</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">react-router-dom</span><span class="dl">'</span><span class="p">;</span>

<span class="k">import</span> <span class="p">{</span> <span class="nx">LOGIN_STATE</span> <span class="p">}</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">../../constants</span><span class="dl">'</span><span class="p">;</span>
<span class="k">import</span> <span class="o">*</span> <span class="k">as</span> <span class="nx">S</span> <span class="k">from</span> <span class="dl">'</span><span class="s1">./styled</span><span class="dl">'</span><span class="p">;</span>

<span class="c1">// Configure Firebase.</span>
<span class="kd">const</span> <span class="nx">config</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">apiKey</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REACT_APP_FIREBASE_API_KEY</span><span class="p">,</span>
  <span class="na">authDomain</span><span class="p">:</span> <span class="nx">process</span><span class="p">.</span><span class="nx">env</span><span class="p">.</span><span class="nx">REACT_APP_FIREBASE_AUTH_DOAMIN</span><span class="p">,</span>
<span class="p">};</span>
<span class="nx">firebase</span><span class="p">.</span><span class="nx">initializeApp</span><span class="p">(</span><span class="nx">config</span><span class="p">);</span>


<span class="k">export</span> <span class="kd">const</span> <span class="nx">GoogleAuth</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
  <span class="kd">const</span> <span class="nx">history</span> <span class="o">=</span> <span class="nx">useHistory</span><span class="p">();</span>
  <span class="kd">const</span> <span class="p">{</span> <span class="nx">loginState</span> <span class="p">}</span> <span class="o">=</span> <span class="nx">useOAuth</span><span class="p">();</span>

  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="nx">getGoogleOAuthResponse</span><span class="p">();</span>
  <span class="p">},</span> <span class="p">[]);</span>

  <span class="nx">useEffect</span><span class="p">(()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">loginState</span> <span class="o">===</span> <span class="nx">LOGIN_STATE</span><span class="p">.</span><span class="nx">SUCCESS</span><span class="p">)</span> <span class="p">{</span>
      <span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">'</span><span class="s1">/user</span><span class="dl">'</span><span class="p">);</span>
    <span class="p">}</span>
  <span class="p">},</span> <span class="p">[</span><span class="nx">loginState</span><span class="p">]);</span>

  <span class="kd">const</span> <span class="nx">getGoogleOAuthResponse</span> <span class="o">=</span> <span class="k">async</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="p">{</span> <span class="nx">credential</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">().</span><span class="nx">getRedirectResult</span><span class="p">()</span> <span class="k">as</span> <span class="kr">any</span><span class="p">;</span>

    <span class="k">if</span> <span class="p">(</span><span class="nx">credential</span><span class="p">)</span> <span class="p">{</span>
      <span class="kd">const</span> <span class="nx">requestParam</span> <span class="o">=</span> <span class="p">{</span>
        <span class="na">provider</span><span class="p">:</span> <span class="dl">'</span><span class="s1">Google</span><span class="dl">'</span><span class="p">,</span>
        <span class="na">access_token</span><span class="p">:</span> <span class="nx">credential</span><span class="p">.</span><span class="nx">accessToken</span><span class="p">,</span>
      <span class="p">};</span>
      <span class="k">try</span> <span class="p">{</span>
        <span class="kd">const</span> <span class="p">{</span> <span class="nx">data</span> <span class="p">}</span> <span class="o">=</span> <span class="k">await</span> <span class="nx">axios</span>
          <span class="p">.</span><span class="nx">post</span><span class="o">&lt;</span><span class="p">{</span><span class="na">token</span><span class="p">:</span> <span class="kr">string</span><span class="p">}</span><span class="o">&gt;</span><span class="p">(</span><span class="s2">`</span><span class="p">${</span><span class="nx">apiBaseURL</span><span class="p">}</span><span class="s2">/token`</span><span class="p">,</span> <span class="nx">requestParam</span><span class="p">);</span>
        <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="dl">'</span><span class="s1">accessToken</span><span class="dl">'</span><span class="p">,</span> <span class="nx">data</span><span class="p">.</span><span class="nx">token</span><span class="p">);</span>
        <span class="nx">history</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="dl">'</span><span class="s1">/user</span><span class="dl">'</span><span class="p">);</span>
      <span class="p">}</span> <span class="k">catch</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span> <span class="p">{</span>
        <span class="nx">console</span><span class="p">.</span><span class="nx">warn</span><span class="p">(</span><span class="nx">e</span><span class="p">);</span>
      <span class="p">}</span>
    <span class="p">}</span>
  <span class="p">};</span>

  <span class="kd">const</span> <span class="nx">signInWithGoogle</span> <span class="o">=</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="p">{</span>
    <span class="kd">const</span> <span class="nx">provider</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">.</span><span class="nx">GoogleAuthProvider</span><span class="p">();</span>
    <span class="nx">firebase</span><span class="p">.</span><span class="nx">auth</span><span class="p">().</span><span class="nx">signInWithRedirect</span><span class="p">(</span><span class="nx">provider</span><span class="p">);</span>
  <span class="p">};</span>

  <span class="k">return</span> <span class="p">(</span>
    <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">Container</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">IconWrapper</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nc">Icon</span> <span class="na">name</span><span class="p">=</span><span class="s">'TEMP_LOGO'</span> <span class="na">size</span><span class="p">=</span><span class="s">'96'</span> <span class="p">/&gt;</span>
      <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">IconWrapper</span><span class="p">&gt;</span>
      <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonWrapper</span><span class="p">&gt;</span>
        <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">Button</span> <span class="na">onClick</span><span class="p">=</span><span class="si">{</span><span class="nx">signInWithGoogle</span><span class="si">}</span><span class="p">&gt;</span>
          <span class="p">&lt;</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonText</span><span class="p">&gt;</span>Start With Google Account<span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonText</span><span class="p">&gt;</span>
        <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">Button</span><span class="p">&gt;</span>
      <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">ButtonWrapper</span><span class="p">&gt;</span>
    <span class="p">&lt;/</span><span class="nc">S</span><span class="p">.</span><span class="nc">Container</span><span class="p">&gt;</span>
  <span class="p">);</span>
<span class="p">}</span>
</code></pre></div></div>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://firebase.google.com/docs/auth/web/google-signin">Firebase Docs: “docs/auth/web/google-signin”</a></li>
  <li><a href="https://firebase.google.com/docs/reference/js/firebase.auth">Firebase Docs: <code class="language-plaintext highlighter-rouge">firebase.auth</code></a></li>
</ul>
:ET