I"8k<p>오늘은 <strong>Java로 Android용 네이티브 모듈(Native Module)을 작성하고 이것을 브릿지(Bridge)를 이용해 React Native에서 사용하는 방법</strong>을 알아본다.</p>

<p>React Native를 사용하다 보면, 빠르든 늦든 거의 반드시 Native Module을 사용해야 하는 경우가 온다.
슬프지만 사실이다.</p>

<p>React Native는 강력하지만 모든 것이 다 제공되진 않기 때문이다.</p>

<p>우리는 우리가 제공하는 앱에서 다른 앱을 열어주기 위해 어쩔 수 없이 Native Module을 만들어 사용해야만 했다.
React Native는 기본적으로 <strong>Linking</strong>을 제공하기에 해당 앱의 커스텀 스킴(Custom Scheme)을 알면 Linking을 활용해 연결할 수 있다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="p">{</span><span class="nx">Linking</span><span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-native</span><span class="dl">"</span>

<span class="nx">Linking</span><span class="p">.</span><span class="nx">openURL</span><span class="p">(</span><span class="nx">url</span><span class="p">).</span><span class="k">catch</span><span class="p">((</span><span class="nx">err</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">error</span><span class="p">(</span><span class="dl">'</span><span class="s1">An error occurred</span><span class="dl">'</span><span class="p">,</span> <span class="nx">err</span><span class="p">));</span>
</code></pre></div></div>

<p>하지만 커스텀 스킴을 알 수 없는 상황에서 다른 앱을 연결해 줄 수 있는 방법은 없었다.</p>

<p><strong>iOS의 경우 반드시 커스텀 스킴이 필요하다.</strong> 커스텀 스킴 없이는 사용자의 폰에 설치되어 있는 앱을 실행할 수 있는 방법이 없는 것으로 알고 있다.
하지만 <strong>Android는 다르다. 네이티브 코드로 작성한다면 설치되어 있는 앱을 찾아 열 수 있는 방법이 존재</strong>했고, 우리는 Native Module을 작성하게 되었다.</p>

<h2 id="native-module-작성하기">Native Module 작성하기</h2>

<p>먼저 <code class="language-plaintext highlighter-rouge">android/app/src/main/java/com/[프로젝트 명]/</code> 디렉토리를 열고 LinkExternalAppModule.java와 LinkExternalAppPackage.java를 만든다.</p>

<p>“LinkExternalApp”은 우리가 만들고자 하는 네이티브 모듈의 특성을 고려해 임의로 설정한 이름이다. 다른 형태의 이름으로 바꿔도 좋지만, <strong>“…Module.java”, “…Package.java” 형태로 만들자.</strong></p>

<p>먼저 <strong>LinkExternalApp.java</strong>를 열고 다음과 같이 코드를 작성한다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.native_makkcha</span><span class="o">;</span>

<span class="c1">// Import android modules</span>
<span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.content.Intent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.net.Uri</span><span class="o">;</span>

<span class="c1">// Import React Native dependencies</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.NativeModule</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.ReactApplicationContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.ReactContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.Callback</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.ReactContextBaseJavaModule</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.ReactMethod</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LinkExternalAppModule</span> <span class="kd">extends</span> <span class="nc">ReactContextBaseJavaModule</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">;</span>

  <span class="kd">public</span> <span class="nf">LinkExternalAppModule</span><span class="o">(</span><span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">)</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">(</span><span class="n">reactContext</span><span class="o">);</span>
    <span class="k">this</span><span class="o">.</span><span class="na">reactContext</span> <span class="o">=</span> <span class="n">reactContext</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="s">"LinkExternalApp"</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@ReactMethod</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">linkExternalApp</span><span class="o">(</span><span class="nc">String</span> <span class="n">packageName</span><span class="o">)</span> <span class="o">{</span>

    <span class="c1">// Context from reactContext</span>
    <span class="nc">Context</span> <span class="n">context</span> <span class="o">=</span> <span class="n">reactContext</span><span class="o">;</span>
    <span class="nc">Activity</span> <span class="n">activity</span> <span class="o">=</span> <span class="n">getCurrentActivity</span><span class="o">();</span>

    <span class="c1">// Intent set from packageName</span>
    <span class="nc">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getLaunchIntentForPackage</span><span class="o">(</span><span class="n">packageName</span><span class="o">);</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">intent</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
      <span class="c1">// Linking to Google Play Store</span>
      <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">(</span><span class="nc">Intent</span><span class="o">.</span><span class="na">ACTION_VIEW</span><span class="o">,</span> <span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"market://details?id="</span><span class="o">+</span><span class="n">packageName</span><span class="o">));</span>
    <span class="o">}</span>

    <span class="n">activity</span><span class="o">.</span><span class="na">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
  <span class="o">}</span>

<span class="o">}</span>
</code></pre></div></div>

<p>먼저 Activity, Intent, Uri를 import 해준다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">// Import android modules</span>
<span class="kn">import</span> <span class="nn">android.app.Activity</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.content.Intent</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.net.Uri</span><span class="o">;</span>
</code></pre></div></div>

<p>Activity를 이용해 외부 앱을 실행시킬 것이고, Intent를 이용해 그 외부 앱으로 연결해줄 것이다. Uri를 이용해서는 앱이 설치되어 있지 않을 경우 스토어로 연결해줄 것이다.</p>

<p>다음으로 클래스를 선언하고 그 안에서 reactContext와 getName 메소드를 설정해준다.
getName 메소드에서는 이후 JavaScript 코드에서 우리가 작성하는 모듈을 import 할 때 사용할 이름을 지정해 주면 된다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">public</span> <span class="kd">class</span> <span class="nc">LinkExternalAppModule</span> <span class="kd">extends</span> <span class="nc">ReactContextBaseJavaModule</span> <span class="o">{</span>
  <span class="kd">private</span> <span class="kd">static</span> <span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">;</span>

  <span class="kd">public</span> <span class="nf">LinkExternalAppModule</span><span class="o">(</span><span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">)</span> <span class="o">{</span>
      <span class="kd">super</span><span class="o">(</span><span class="n">reactContext</span><span class="o">);</span>
      <span class="k">this</span><span class="o">.</span><span class="na">reactContext</span> <span class="o">=</span> <span class="n">reactContext</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">String</span> <span class="nf">getName</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="s">"LinkExternalApp"</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>이제 우리가 필요로 하는 메소드를 작성할 차례이다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nd">@ReactMethod</span>
<span class="kd">public</span> <span class="kt">void</span> <span class="nf">linkExternalApp</span><span class="o">(</span><span class="nc">String</span> <span class="n">packageName</span><span class="o">)</span> <span class="o">{</span>

  <span class="c1">// Context from reactContext</span>
  <span class="nc">Context</span> <span class="n">context</span> <span class="o">=</span> <span class="n">reactContext</span><span class="o">;</span>
  <span class="nc">Activity</span> <span class="n">activity</span> <span class="o">=</span> <span class="n">getCurrentActivity</span><span class="o">();</span>

  <span class="c1">// Intent set from packageName</span>
  <span class="nc">Intent</span> <span class="n">intent</span> <span class="o">=</span> <span class="n">context</span><span class="o">.</span><span class="na">getPackageManager</span><span class="o">().</span><span class="na">getLaunchIntentForPackage</span><span class="o">(</span><span class="n">packageName</span><span class="o">);</span>
  <span class="k">if</span> <span class="o">(</span><span class="n">intent</span> <span class="o">==</span> <span class="kc">null</span><span class="o">)</span> <span class="o">{</span>
    <span class="c1">// Linking to Google Play Store</span>
    <span class="n">intent</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">Intent</span><span class="o">(</span><span class="nc">Intent</span><span class="o">.</span><span class="na">ACTION_VIEW</span><span class="o">,</span> <span class="nc">Uri</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"market://details?id="</span><span class="o">+</span><span class="n">packageName</span><span class="o">));</span>
  <span class="o">}</span>

  <span class="n">activity</span><span class="o">.</span><span class="na">startActivity</span><span class="o">(</span><span class="n">intent</span><span class="o">);</span>
<span class="o">}</span>
</code></pre></div></div>

<p>먼저 <code class="language-plaintext highlighter-rouge">@ReactMethod</code>라는 어노테이션을 추가한다. 이렇게 해야지만 JavaScript에서 접근이 가능해진다.</p>

<p>다음으로 return 타입 void인 메소드를 선언한다.
우리는 packageName을 String 인자로 받아 처리하도록 했다. 필요한 경우 콜백 함수를 받을 수도 있다.</p>

<p>context와 activity를 선언하고, Intent 설정을 해준다.
<code class="language-plaintext highlighter-rouge">Intent intent = context.getPackageManager().getLaunchIntentForPackage(packageName);</code>는 앱이 실행되는 안드로이드 폰에서 packageName에 해당하는 앱을 찾아 intent 설정을 해준다.</p>

<p>마지막으로 분기문을 추가해 만약 앱이 설치되어 있지 않을 경우 구글 플레이 스토어로 이동시켜 준다.</p>

<p><code class="language-plaintext highlighter-rouge">activity.startActivity(intent);</code>는 해당 메소드가 실행될 경우 새 앱을 열어주도록 한다.</p>

<p>다음으로는 패키지 파일을 작성하자.
같은 디렉토리 내에 아래와 같이 파일을 생성한다.</p>

<p><strong>LinkExternalAppPackage.java</strong></p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.native_makkcha</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.facebook.react.ReactPackage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.NativeModule</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.ReactApplicationContext</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.uimanager.ViewManager</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.ArrayList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.Collections</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">LinkExternalAppPackage</span> <span class="kd">implements</span> <span class="nc">ReactPackage</span> <span class="o">{</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ViewManager</span><span class="o">&gt;</span> <span class="nf">createViewManagers</span><span class="o">(</span><span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="k">return</span> <span class="nc">Collections</span><span class="o">.</span><span class="na">emptyList</span><span class="o">();</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">NativeModule</span><span class="o">&gt;</span> <span class="nf">createNativeModules</span><span class="o">(</span><span class="nc">ReactApplicationContext</span> <span class="n">reactContext</span><span class="o">)</span> <span class="o">{</span>
        <span class="nc">List</span><span class="o">&lt;</span><span class="nc">NativeModule</span><span class="o">&gt;</span> <span class="n">modules</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ArrayList</span><span class="o">&lt;&gt;();</span>

        <span class="n">modules</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">LinkExternalAppModule</span><span class="o">(</span><span class="n">reactContext</span><span class="o">));</span>

        <span class="k">return</span> <span class="n">modules</span><span class="o">;</span>
    <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p><code class="language-plaintext highlighter-rouge">modules.add(new LinkExternalAppModule(reactContext));</code>를 통해서 reactContext를 인자로 넘겨주고 모듈 인스턴스를 등록한다.</p>

<h2 id="native-module-link-하기">Native Module Link 하기</h2>

<p>이제는 <strong>MainApplication.java</strong>에 우리가 작성한 Native Module을 연결할 차례다.</p>

<p><code class="language-plaintext highlighter-rouge">android/app/src/main/java/com/[프로젝트 명]/MainApplication.java</code>를 연다.</p>

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kn">package</span> <span class="nn">com.native_makkcha</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">android.app.Application</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">android.util.Log</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">com.native_makkcha.LinkExternalAppPackage</span><span class="o">;</span> <span class="c1">// 이 부분을 추가한다</span>

<span class="kn">import</span> <span class="nn">com.facebook.react.PackageList</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.hermes.reactexecutor.HermesExecutorFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.bridge.JavaScriptExecutorFactory</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.ReactApplication</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.ReactNativeHost</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.react.ReactPackage</span><span class="o">;</span>
<span class="kn">import</span> <span class="nn">com.facebook.soloader.SoLoader</span><span class="o">;</span>

<span class="kn">import</span> <span class="nn">java.util.List</span><span class="o">;</span>

<span class="kd">public</span> <span class="kd">class</span> <span class="nc">MainApplication</span> <span class="kd">extends</span> <span class="nc">Application</span> <span class="kd">implements</span> <span class="nc">ReactApplication</span> <span class="o">{</span>

  <span class="kd">private</span> <span class="kd">final</span> <span class="nc">ReactNativeHost</span> <span class="n">mReactNativeHost</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">ReactNativeHost</span><span class="o">(</span><span class="k">this</span><span class="o">)</span> <span class="o">{</span>
    <span class="nd">@Override</span>
    <span class="kd">public</span> <span class="kt">boolean</span> <span class="nf">getUseDeveloperSupport</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="nc">BuildConfig</span><span class="o">.</span><span class="na">DEBUG</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ReactPackage</span><span class="o">&gt;</span> <span class="nf">getPackages</span><span class="o">()</span> <span class="o">{</span>
      <span class="nd">@SuppressWarnings</span><span class="o">(</span><span class="s">"UnnecessaryLocalVariable"</span><span class="o">)</span>
      <span class="nc">List</span><span class="o">&lt;</span><span class="nc">ReactPackage</span><span class="o">&gt;</span> <span class="n">packages</span> <span class="o">=</span> <span class="k">new</span> <span class="nc">PackageList</span><span class="o">(</span><span class="k">this</span><span class="o">).</span><span class="na">getPackages</span><span class="o">();</span>
      <span class="n">packages</span><span class="o">.</span><span class="na">add</span><span class="o">(</span><span class="k">new</span> <span class="nc">LinkExternalAppPackage</span><span class="o">());</span> <span class="c1">// 이 부분을 추가한다.</span>
      <span class="k">return</span> <span class="n">packages</span><span class="o">;</span>
    <span class="o">}</span>

    <span class="nd">@Override</span>
    <span class="kd">protected</span> <span class="nc">String</span> <span class="nf">getJSMainModuleName</span><span class="o">()</span> <span class="o">{</span>
      <span class="k">return</span> <span class="s">"index"</span><span class="o">;</span>
    <span class="o">}</span>
  <span class="o">};</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="nc">ReactNativeHost</span> <span class="nf">getReactNativeHost</span><span class="o">()</span> <span class="o">{</span>
    <span class="k">return</span> <span class="n">mReactNativeHost</span><span class="o">;</span>
  <span class="o">}</span>

  <span class="nd">@Override</span>
  <span class="kd">public</span> <span class="kt">void</span> <span class="nf">onCreate</span><span class="o">()</span> <span class="o">{</span>
    <span class="kd">super</span><span class="o">.</span><span class="na">onCreate</span><span class="o">();</span>
    <span class="nc">SoLoader</span><span class="o">.</span><span class="na">init</span><span class="o">(</span><span class="k">this</span><span class="o">,</span> <span class="cm">/* native exopackage */</span> <span class="kc">false</span><span class="o">);</span>
  <span class="o">}</span>
<span class="o">}</span>
</code></pre></div></div>

<p>주석으로 추가하라고 명시한 부분을 추가해주면 Java로 코드를 작성하는 일은 모두 끝이 난다.</p>

<h2 id="javascript-코드에서-native-module-사용하기">JavaScript 코드에서 Native Module 사용하기</h2>

<p>이제는 JavaScript 코드에서 Native Module을 import해서 사용하면 된다.</p>

<div class="language-react highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">import</span> <span class="nx">React</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react</span><span class="dl">"</span><span class="p">;</span>
<span class="k">import</span> <span class="p">{</span>
  <span class="nx">View</span><span class="p">,</span>
  <span class="nx">Image</span><span class="p">,</span>
  <span class="nx">Platform</span><span class="p">,</span>
  <span class="nx">TouchableOpacity</span><span class="p">,</span>
  <span class="nx">Text</span><span class="p">,</span>
  <span class="nx">NativeModules</span><span class="p">,</span>
  <span class="nx">Linking</span><span class="p">,</span>
  <span class="nx">Alert</span>
<span class="p">}</span> <span class="k">from</span> <span class="dl">"</span><span class="s2">react-native</span><span class="dl">"</span><span class="p">;</span>


<span class="kd">function</span> <span class="nx">openService</span><span class="p">(</span><span class="nx">service</span><span class="p">)</span> <span class="p">{</span>
    <span class="k">if</span> <span class="p">(</span><span class="nx">Platform</span><span class="p">.</span><span class="nx">OS</span> <span class="o">===</span> <span class="dl">"</span><span class="s2">android</span><span class="dl">"</span><span class="p">)</span>
      <span class="nx">NativeModules</span><span class="p">.</span><span class="nx">LinkExternalApp</span><span class="p">.</span><span class="nx">linkExternalApp</span><span class="p">(</span><span class="nx">packageName</span><span class="p">);</span>
    <span class="k">else</span> <span class="p">{</span>
      <span class="nx">Alert</span><span class="p">.</span><span class="nx">alert</span><span class="p">(</span>
        <span class="dl">"</span><span class="s2">iOS는 아직 앱 연결이 안되요</span><span class="dl">"</span><span class="p">,</span>
        <span class="s2">`</span><span class="p">${</span><span class="nx">serviceText</span><span class="p">}</span><span class="s2"> 설치 페이지로 이동하실래요?`</span><span class="p">,</span>
        <span class="p">[</span>
          <span class="p">{</span>
            <span class="na">text</span><span class="p">:</span> <span class="dl">"</span><span class="s2">아뇨</span><span class="dl">"</span><span class="p">,</span>
            <span class="na">onPress</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="dl">"</span><span class="s2">canceled</span><span class="dl">"</span><span class="p">),</span>
            <span class="na">style</span><span class="p">:</span> <span class="dl">"</span><span class="s2">cancel</span><span class="dl">"</span>
          <span class="p">},</span>
          <span class="p">{</span> <span class="na">text</span><span class="p">:</span> <span class="dl">"</span><span class="s2">네</span><span class="dl">"</span><span class="p">,</span> <span class="na">onPress</span><span class="p">:</span> <span class="p">()</span> <span class="o">=&gt;</span> <span class="nx">Linking</span><span class="p">.</span><span class="nx">openURL</span><span class="p">(</span><span class="nx">iosLink</span><span class="p">)</span> <span class="p">}</span>
        <span class="p">]</span>
      <span class="p">);</span>
    <span class="p">}</span>
  <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<p>위 코드에 정의된 openService 함수가 Native Module을 사용하는 함수다.</p>

<p>먼저 react-native에서 <code class="language-plaintext highlighter-rouge">import { NativeModules } from "react-native"</code> 형식으로 NativeModules를 import 한다.</p>

<p>네이티브 모듈은 <code class="language-plaintext highlighter-rouge">NativeModules.LinkExternalApp.linkExternalApp(packageName);</code> 처럼 사용하면 된다.
NativeModules에 등록된 LinkExternalApp 모듈의 linkExternalApp 함수를 실행하라는 의미이다.</p>

<h2 id="마치며">마치며</h2>

<p>안타깝게도 지금까지 확인한 바로는 iOS에서 Linking과 Custom Scheme을 활용해 앱을 연결하는 방법 외에는 다른 방법이 없다고 한다.
설치된 앱을 실행시키는 방법은 안드로이드에서만 가능한 것이다.</p>

<p>React Native를 이용하다 보면 별별 산전수전을 다 겪게 된다. 그 과정에서 JavaScript를 사용하는 프론트엔드 개발자로서 생각지도 못했던 Java 및 Objective-C 코드 작성도 하게 되는 것 같다.
앞으로 Android 앱 개발을 좀 더 깊이 공부해 보며 네이티브에 대한 이해를 넓혀가려 한다.</p>

<h2 id="참고-자료">참고 자료</h2>

<ul>
  <li><a href="https://facebook.github.io/react-native/docs/native-modules-android">Facebook React Native - Native Modules(Android)</a></li>
  <li><a href="https://medium.com/@kyo504/react-native%EC%97%90%EC%84%9C-native-module-%EC%9D%B4%EC%9A%A9%ED%95%98%EA%B8%B0-d4728337af4e">React-Native에서 native module 이용하기</a></li>
</ul>
:ET