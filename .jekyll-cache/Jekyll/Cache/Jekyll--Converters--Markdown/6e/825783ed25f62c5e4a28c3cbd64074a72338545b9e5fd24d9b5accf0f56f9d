I"ï<p>Most modern server instances are composed of multi-core CPU.
Since, Node.js runs application based on single-thread, Node.js provides API called <strong><a href="https://nodejs.org/api/cluster.html">Cluster</a></strong>.</p>

<p>Simmilar, pm2, a process manager for Node.js, offers <strong><a href="https://pm2.keymetrics.io/docs/usage/cluster-mode/">Cluster Mode</a></strong>.
By running Node.js application with <code class="language-plaintext highlighter-rouge">cluster mode</code>, pm2 generates multiple processes based on configurations.</p>

<h2 id="basics">Basics</h2>
<p><code class="language-plaintext highlighter-rouge">cluster mode</code> uses Node.js <a href="https://nodejs.org/api/cluster.html">cluster module</a>.</p>

<p>According to the pm2 documentation:</p>
<blockquote>
  <p>This greatly increases the performance and reliability of your applications, depending on the number of CPUs available.</p>
</blockquote>

<p>The configuration could be made either manually with simple command, or piece by piece with <code class="language-plaintext highlighter-rouge">yaml</code> or <code class="language-plaintext highlighter-rouge">config.js</code> file.</p>

<h2 id="implementation">Implementation</h2>
<h3 id="simple-configuration">Simple Configuration</h3>
<p>Running app with max number of processes, just command:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pm2 start app.js -i max
</code></pre></div></div>

<p>pm2 will automatically detect the number of available CPUs and generates processes accordingly.</p>

<h3 id="using-ecosystem-file">Using Ecosystem File</h3>
<p>By using <code class="language-plaintext highlighter-rouge">ecosystem</code> command, pm2 offers you to create ecosystem file(ecosystem.config.js) easily, which helps you to configure in code-basis.</p>

<p>Just run:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>pm2 ecosystem
</code></pre></div></div>

<p>Then pm2 automatically generates <code class="language-plaintext highlighter-rouge">ecosystem.config.js</code> in the working directory.</p>

<p>Then, write configuration.</p>

<p>My app is based on Next.js, so my app should be run by command <code class="language-plaintext highlighter-rouge">npm start</code>. I added scripts and args to start my app.</p>
<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nx">module</span><span class="p">.</span><span class="nx">exports</span> <span class="o">=</span> <span class="p">{</span>
  <span class="na">apps</span><span class="p">:</span> <span class="p">[{</span>
    <span class="na">script</span><span class="p">:</span> <span class="dl">'</span><span class="s1">npm</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">args</span><span class="p">:</span> <span class="dl">'</span><span class="s1">start</span><span class="dl">'</span><span class="p">,</span>
    <span class="na">instances</span><span class="p">:</span> <span class="dl">"</span><span class="s2">max</span><span class="dl">"</span><span class="p">,</span>
    <span class="na">exec_mode</span><span class="p">:</span> <span class="dl">"</span><span class="s2">cluster</span><span class="dl">"</span>
  <span class="p">}],</span>
<span class="p">};</span>
</code></pre></div></div>

<p>If you are using <code class="language-plaintext highlighter-rouge">ecosystem.config.js</code> to enable cluster mode, be sure to include <code class="language-plaintext highlighter-rouge">exec_mode: "cluster"</code>.</p>

<p>According to the <a href="https://pm2.keymetrics.io/docs/usage/cluster-mode/">documentation</a>,</p>
<blockquote>
  <p>0/max to spread the app across all CPUs
-1 to spread the app across all CPUs - 1
number to spread the app across number CPUs</p>
</blockquote>

<h2 id="fyi">FYI</h2>
<p><code class="language-plaintext highlighter-rouge">reload</code> vs. <code class="language-plaintext highlighter-rouge">restart</code>:
<code class="language-plaintext highlighter-rouge">reload</code> achieves 0-second-downtime reload whereas <code class="language-plaintext highlighter-rouge">restart</code> kills and restarts app which eventually creates downtime.</p>

<h2 id="possible-bug">Possible Bug</h2>
<p><img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/pm2-1.png" alt="cpu-usage-0" /></p>

<p>Generally <code class="language-plaintext highlighter-rouge">pm2 status</code> command offers CPU usage, yet in cluster mode, it returns â€˜0%â€™.
I made some search and found out that CPU usage computed by pm2 is not that accurate, since it only take first process in the computation(<a href="https://github.com/Unitech/pm2/issues/3319">Ref: pm2 ls memory data is not accurate #3319</a>).</p>

<p><img src="https://raw.githubusercontent.com/ChaeWonKong/image-resource/master/pm2-2.png" alt="log-not-available" />
Also, in cluster mode, <code class="language-plaintext highlighter-rouge">pm2 monit</code> does not generates npm logs.</p>

:ET