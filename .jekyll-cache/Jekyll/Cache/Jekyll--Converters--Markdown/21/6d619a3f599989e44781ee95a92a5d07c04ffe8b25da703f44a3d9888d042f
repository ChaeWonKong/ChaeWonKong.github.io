I">?<p>Developing an production-level service requires whole new bunch of things to ensure production-level quality.</p>

<p>Consumers, or users are hot-tempered. They don’t tolerate errors, bugs, and waitings.</p>

<p>Quality assurance(QA) becomes is much more important compared to personal toy projects.</p>

<p>Separating development/production deployment offers benefits a lot.</p>

<p>You can <strong>fearlessly deploy to development environment and test your development, without contaminating production environment.</strong>
Plus, <strong>there are some features that could only be tested after deployment</strong>, such as CI/CD configurations and OAuth implementations.</p>

<p>Today, let’s find out how to <strong>separate dev/prod deployment by using Firebase hosting</strong>.</p>

<h2 id="tldr">TL;DR</h2>
<p>Use <a href="https://firebase.google.com/docs/hosting/multisites">multisite hosting</a>.
If you already have a project deployed to Firebase hosting, just make sure to login again right after implementing multisite configurations.</p>

<ol>
  <li>Add another site in Firebase console.</li>
  <li>Apply sites by using Firebase CLI: <code class="language-plaintext highlighter-rouge">firebase target:apply hosting TARGET_NAME RESOURCE_NAME</code></li>
  <li>Log out and log in again to acquire new token.</li>
  <li>Deploy to desired environment: <code class="language-plaintext highlighter-rouge">firebase deploy --only hosting:dev</code> or <code class="language-plaintext highlighter-rouge">firebase deploy --only hosting:prod</code></li>
</ol>

<h2 id="add-another-site">Add another site.</h2>
<p>Pretend we have a site called blablamusic already on firebase hosting.</p>

<p>Just create another site called <code class="language-plaintext highlighter-rouge">blablamusic-dev</code> or whatever you want, just be sure to include prefix/sufix that indecates develepment environment.</p>

<h2 id="setting-site-targets">Setting site targets</h2>
<p>Assuming that you have an existing firebase project, let’s add tarets.</p>

<p>I guess your local project already been initiated with firebase and has <code class="language-plaintext highlighter-rouge">.firebaserc</code> and <code class="language-plaintext highlighter-rouge">firebase.json</code>.</p>

<p>Run command below:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ firebase target:apply hosting prod blablamusic
$ firebase target:apply hosting dev blablamusic-dev
</code></pre></div></div>

<p>The rule is simple:</p>
<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>firebase target:apply hosting TARGET_NAME RESOURCE_NAME
</code></pre></div></div>

<p>TARGET_NAME is like an alias that distinguishes site.
RESOURCE_NAME is a name of your site (<code class="language-plaintext highlighter-rouge">blablamusic</code> or <code class="language-plaintext highlighter-rouge">blablamusic-dev</code>).</p>

<p>This will add dev/prod targets.</p>

<p>Your firebaserc will look like:</p>
<div class="language-json highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="p">{</span><span class="w">
  </span><span class="nl">"projects"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"default"</span><span class="p">:</span><span class="w"> </span><span class="s2">"blablamusic"</span><span class="w">
  </span><span class="p">},</span><span class="w">
  </span><span class="nl">"targets"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
    </span><span class="nl">"blablamusic"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
      </span><span class="nl">"hosting"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="nl">"prod"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
          </span><span class="s2">"blablamusic"</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="nl">"dev"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
          </span><span class="s2">"blablamusic-dev"</span><span class="w">
        </span><span class="p">]</span><span class="w">
      </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
  </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre></div></div>

<p>Make sure to log out and log in again to acquire brand new token, unless you’ll encounter an error when publishing your site.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ firebase logout
$ firebase login:ci
</code></pre></div></div>

<p>The command in the second line will print out firebase token. Be sure to copy it, for you need to store that token in GitHub to use automated deployment by using GitHub Actions.</p>

<h2 id="deployment-from-local-cli">Deployment From local CLI</h2>
<p>Let’s test our first deployment from terminal.</p>

<p>Build your app and deploy.</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>$ firebase deploy --only hosting:dev
</code></pre></div></div>

<p>This will deploy your site only to <code class="language-plaintext highlighter-rouge">blablamusic-dev</code>.</p>

<h2 id="github-integration">GitHub Integration</h2>
<p>Using GitHub actions, the whole deployment process could easily be automated.</p>

<h3 id="token-setup">Token Setup</h3>
<p>In order to automate the deployment, Firebase token should be registered as GitHub secrets.</p>

<ol>
  <li>Go to your GitHub project, settings &gt; secrets.</li>
  <li>Add new secret called <code class="language-plaintext highlighter-rouge">FIREBASE_TOKEN</code> and paste your firebase token.</li>
</ol>

<h3 id="deployment-strategy">Deployment Strategy</h3>
<ol>
  <li>Deploy to development whenever commits has been pushed to origin.</li>
  <li>Deploy to production when pull request has been merged into master branch.</li>
</ol>

<p>We will use GitHub actions to automate deployment and <code class="language-plaintext highlighter-rouge">w9jds/firebase-action</code> library will be in use.</p>

<p>Before begin, create <code class="language-plaintext highlighter-rouge">.github/workflows</code> directory in the root of your project.</p>

<h3 id="development-deployment">Development Deployment</h3>
<p>Create <code class="language-plaintext highlighter-rouge">deploy.yml</code> in <code class="language-plaintext highlighter-rouge">.github/workflows</code>directory.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Deploy</span>
<span class="na">on</span><span class="pi">:</span>
  <span class="pi">-</span> <span class="s">push</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Build</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout Repo</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@master</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install Dependencies</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm ci</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm run build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Archive Production Artifact</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/upload-artifact@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">build</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s">build</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy Development</span>
    <span class="na">needs</span><span class="pi">:</span> <span class="s">build</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout Repo</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@master</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Download Artifact</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/download-artifact@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">build</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s">build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to Firebase</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">w9jds/firebase-action@v1.5.0</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">args</span><span class="pi">:</span> <span class="s">deploy --only hosting:dev</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">FIREBASE_TOKEN</span><span class="pi">:</span> <span class="s">${{ secrets.FIREBASE_TOKEN }}</span>
</code></pre></div></div>

<h3 id="production-deployment">Production Deployment</h3>
<p>Create <code class="language-plaintext highlighter-rouge">release.yml</code> in <code class="language-plaintext highlighter-rouge">.github/workflows</code>directory.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">name</span><span class="pi">:</span> <span class="s">Release</span>
<span class="na">on</span><span class="pi">:</span>
  <span class="na">pull_request</span><span class="pi">:</span>
    <span class="na">types</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">closed</span><span class="pi">]</span>
    <span class="na">branches</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">master</span>

<span class="na">jobs</span><span class="pi">:</span>
  <span class="na">build</span><span class="pi">:</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Build</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout Repo</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@master</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Install Dependencies</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm ci</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Build</span>
        <span class="na">run</span><span class="pi">:</span> <span class="s">npm run build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Archive Production Artifact</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/upload-artifact@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">build</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s">build</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="na">if</span><span class="pi">:</span> <span class="s">github.event.pull_request.merged == </span><span class="no">true</span>
    <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy</span>
    <span class="na">needs</span><span class="pi">:</span> <span class="s">build</span>
    <span class="na">runs-on</span><span class="pi">:</span> <span class="s">ubuntu-latest</span>
    <span class="na">steps</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Checkout Repo</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/checkout@master</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Download Artifact</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">actions/download-artifact@master</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">name</span><span class="pi">:</span> <span class="s">build</span>
          <span class="na">path</span><span class="pi">:</span> <span class="s">build</span>
      <span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Deploy to Firebase</span>
        <span class="na">uses</span><span class="pi">:</span> <span class="s">w9jds/firebase-action@v1.5.0</span>
        <span class="na">with</span><span class="pi">:</span>
          <span class="na">args</span><span class="pi">:</span> <span class="s">deploy --only hosting:prod</span>
        <span class="na">env</span><span class="pi">:</span>
          <span class="na">FIREBASE_TOKEN</span><span class="pi">:</span> <span class="s">${{ secrets.FIREBASE_TOKEN }}</span>
</code></pre></div></div>

<p>The code below triggers production release(deployment) only when the PR has been merged to branch master:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">name</span><span class="pi">:</span> <span class="s">Release</span>
<span class="na">on</span><span class="pi">:</span>
  <span class="na">pull_request</span><span class="pi">:</span>
    <span class="na">types</span><span class="pi">:</span> <span class="pi">[</span><span class="nv">closed</span><span class="pi">]</span>
    <span class="na">branches</span><span class="pi">:</span>
      <span class="pi">-</span> <span class="s">master</span>

<span class="c1"># ...</span>
  <span class="na">deploy</span><span class="pi">:</span>
    <span class="na">if</span><span class="pi">:</span> <span class="s">github.event.pull_request.merged == </span><span class="no">true</span>
</code></pre></div></div>

<h2 id="reference">Reference</h2>
<ul>
  <li><a href="https://firebase.google.com/docs/hosting/multisites">Firebase hosting - Share project resources across multiple sites</a></li>
  <li><a href="https://github.com/w9jds/firebase-action">GitHub Actions for Firebase</a></li>
  <li><a href="https://stackoverflow.com/questions/57941289/how-do-i-solve-error-failed-to-list-firebase-projects-see-firebase-debug-log">How do I solve: Error: Failed to list Firebase projects. See firebase-debug.log for more info</a></li>
</ul>
:ET